name: CI
on:
  push:
  workflow_dispatch:
  workflow_call:
  schedule:
  - cron: '0 1 * * *'
jobs:
  Format:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
        - 5432:5432
    env:
      TEST_DATABASE_URL: postgresql://postgres@localhost:5432/data_tasks_test
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Create test database
        run: psql -U postgres -h localhost -p 5432 -c 'CREATE DATABASE data_tasks_test'
      - run: python -m pip install tox
      - run: tox -e checkformatting
  Lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
        - 5432:5432
    env:
      TEST_DATABASE_URL: postgresql://postgres@localhost:5432/data_tasks_test
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Create test database
        run: psql -U postgres -h localhost -p 5432 -c 'CREATE DATABASE data_tasks_test'
      - run: python -m pip install tox
      - run: tox -e lint
  Tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
        - 5432:5432
    env:
      TEST_DATABASE_URL: postgresql://postgres@localhost:5432/data_tasks_test
    strategy:
      matrix:
        python-version: ['3.10', '3.9', '3.8', '3.7']
    name: Unit tests with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create test database
        run: psql -U postgres -h localhost -p 5432 -c 'CREATE DATABASE data_tasks_test'
      - run: python -m pip install tox
      - run: tox -e tests
      - name: Upload coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.*
  Coverage:
    needs: tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
        - 5432:5432
    env:
      TEST_DATABASE_URL: postgresql://postgres@localhost:5432/data_tasks_test
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Create test database
        run: psql -U postgres -h localhost -p 5432 -c 'CREATE DATABASE data_tasks_test'
      - name: Download coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - run: python -m pip install tox
      - run: tox -e coverage
  Functests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5-alpine
        ports:
        - 5432:5432
    env:
      TEST_DATABASE_URL: postgresql://postgres@localhost:5432/data_tasks_test
    strategy:
      matrix:
        python-version: ['3.10', '3.9', '3.8', '3.7']
    name: Functional tests with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create test database
        run: psql -U postgres -h localhost -p 5432 -c 'CREATE DATABASE data_tasks_test'
      - run: python -m pip install tox
      - run: tox -e functests
